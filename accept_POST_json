
//lcd Ywrobot Arduino lcm1602 iic v1
//Connect GND, VCC, SDA and SCL from lcd to corresponding pins on arduino (only these pins need to be connected)
//temp sensor: lm35
//facing flat side of temp sensor: left to +5, middle to analog input(A0 to A5), right pin to GND

#include <EthernetV2_0.h>
#include <SPI.h>
#include "Time.h"
#include <Wire.h>
#include <LiquidCrystal_I2C.h> // download library if not available
#include <stdio.h>
#include <stdlib.h>

#define SDCARD_CS 4
//#define ledPin 13

LiquidCrystal_I2C lcd(0x27, 2, 1, 0, 4, 5, 6, 7, 3, POSITIVE);  // Set the LCD I2C address
time_t tm;
char timechar[10];

//conection related stuff
byte mac[] = { 0x00, 0xAA, 0xBB, 0xCC, 0xDE, 0x02 };
byte ip[]      = { 192, 168,   1,  199 };
byte gateway[] = { 192, 168,   1,  1 };
byte subnet[]  = { 255, 255, 255,   0 };
IPAddress server_ip(192,168,1,33);
IPAddress ip_temp;
int connect_ret;
EthernetClient client;
EthernetServer server(80); //telnet defaults to this port


void setup()  
{
  
    Serial.begin(9600);  // Used to type in characters
    delay(1000);
    Serial.println("Setup");
    //deselect SD card
    pinMode(SDCARD_CS,OUTPUT);
    digitalWrite(SDCARD_CS,HIGH);//Deselect the SD card
    
    lcd.begin(16,2);   // initialize the lcd for 16 chars 2 lines, turn on backlight
    lcd.clear();
   
    
    if(Ethernet.begin(mac)==0)
    {
        Serial.println("Unable to assign IP using DHCP");
        Ethernet.begin(mac, ip, gateway, subnet);
        
    }
    
    server.begin();
        
        
        //Serial.print("My IP address: ");
        Serial.print("Arduino's IP:");
        ip_temp = Ethernet.localIP();
        for (byte thisByte = 0; thisByte < 4; thisByte++)
        {
            // print the value of each byte of the IP address:
            Serial.print(ip_temp[thisByte], DEC);
            Serial.print(".");
        }
        
        Serial.println();
}

void disp_time()
{
    tm=now();
    dtostrf(tm,4,0,timechar);
 
     
    Serial.print("TIME = ");
    Serial.println(tm);
   
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.write("Time:");
    lcd.setCursor(7,0);
    lcd.write(timechar);
}

void send_data()
{
  
                Serial.println("Sending time data...");
                client.println("PUT / HTTP/1.0");
                client.println("Content-Type: application/json");
                client.println("Connection: Keep-Alive");
                client.println("Content-Length: 20");
                client.println();
                client.print("\"Time\":");
                client.println(timechar);
                client.println();
                Serial.println("Time sent through telnet");
                
}
/*

int conn()
{
    Serial.println("Conn");
    connect_ret=client.connect(server_ip,8080);
    Serial.print("Return from connect:");
    Serial.println(connect_ret);
    return connect_ret;
}
*/
void loop()
{
  disp_time();
  
  //Serial.println("Loop");
  
  
    client=server.available(); // listen for incoming clients
    
    if(client)
    {
    
        Serial.println("New client");
      
            while(client.available())
            {
                char c=client.read();
                Serial.write(c);
                
                 
            } // client.available()
     
      
       
        
    }//if(client)
    // client.stop();
        //Serial.println("Client disconnected");
        
        delay(1000);
   // conn(); //send data 
   
    
} // end of loop1

